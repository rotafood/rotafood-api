spring.application.name=api
spring.threads.virtual.enabled=true
spring.config.import=optional:file:.env[.properties]

spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:${DATABASE_URL}
spring.datasource.username=${DATABASE_USERNAME}
spring.datasource.password=${DATABASE_PASSWORD}

spring.mail.host=${EMAIL_SERVER}
spring.mail.port=${EMAIL_PORT}
spring.mail.username=${EMAIL_USERNAME}
spring.mail.password=${EMAIL_PASSWORD}
spring.mail.protocol=smtp

spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.template-resolver-order=1
spring.thymeleaf.cache=false

springdoc.swagger-ui.path=/swagger-ui.html

springdoc.show-actuator=true


# Hibernate recria o banco de dados toda vez que a aplicação inicia
# spring.jpa.hibernate.ddl-auto=create-drop
# spring.jpa.show-sql=false
# spring.jpa.properties.hibernate.format_sql=true
# logging.level.org.hibernate.SQL=DEBUG
# logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Geração de script do Hibernate para referência futura
spring.jpa.properties.javax.persistence.schema-generation.scripts.action=update
spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=src/main/resources/db/migration/ddl_create_initial_schema.sql
spring.jpa.properties.javax.persistence.schema-generation.create-source=metadata



spring.flyway.enabled=false
# spring.flyway.locations=classpath:db/migration


# spring.devtools.restart.poll-interval=2s
# spring.devtools.restart.quiet-period=1s
# spring.devtools.restart.trigger-file =.reloadTrigger

# logging.level.org.springframework=DEBUG
# logging.level.org.springframework.web=DEBUG
# logging.level.org.springframework.boot=DEBUG
# logging.level.br.com.rotafood=DEBUG








api.security.token.secret=${JWT_SECRET}

api.security.allowed.origin=${ALLOWED_ORIGIN}
gcp.bucket.name=${GCP_BUCKET_NAME}
gcp.bucket.url=${GCP_BUCKET_URL}


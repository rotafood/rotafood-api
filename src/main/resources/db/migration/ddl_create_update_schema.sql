create table addresses (latitude numeric(9,6), longitude numeric(9,6), id uuid not null, city varchar(255), complement varchar(255), country varchar(255), formatted_address varchar(255), neighborhood varchar(255), postal_code varchar(255), state varchar(255), street_name varchar(255), street_number varchar(255), primary key (id));
create table catalog_categories (catalog_id uuid not null, category_id uuid not null, id uuid not null, primary key (id));
create table catalogs (modified_at timestamp(6), i_food_catalog_id uuid, id uuid not null, merchant_id uuid, catalog_context varchar(255) check (catalog_context in ('TABLE','DELIVERY','IFOOD')), status varchar(255) check (status in ('AVAILIABLE','UNAVAILABLE')), primary key (id));
create table categories (index integer, i_food_category_id uuid, id uuid not null, merchant_id uuid, name varchar(255) not null, status varchar(255) check (status in ('AVAILIABLE','UNAVAILABLE')), template varchar(255) check (template in ('DEFAULT','PIZZA')), primary key (id));
create table commands (number integer not null, pending numeric(10,2), prepaid numeric(10,2), id uuid not null, table_id uuid, primary key (id));
create table context_modifiers (id uuid not null, item_id uuid, option_id uuid, parent_option_id uuid, price_id uuid unique, catalog_context varchar(255) check (catalog_context in ('TABLE','DELIVERY','IFOOD')), status varchar(255) check (status in ('AVAILIABLE','UNAVAILABLE')), primary key (id));
create table default_packagings (lenght_cm numeric(10,2) not null, thickness_cm numeric(10,2) not null, volume_ml numeric(10,2) not null, width_cm numeric(10,2) not null, id uuid not null, name varchar(64) not null, i_food_image_path varchar(255), image_path varchar(255), primary key (id));
create table default_products (id uuid not null, name varchar(128) not null, ean varchar(256), description varchar(1024) not null, i_food_image_path varchar(255), image_path varchar(255), primary key (id));
create table images (i_food_image_id uuid, id uuid not null, merchant_id uuid, i_food_image_path varchar(255), path varchar(255), primary key (id));
create table items (index integer, category_id uuid, i_food_item_id uuid, id uuid not null, merchant_id uuid not null, product_id uuid unique, status varchar(255) check (status in ('AVAILIABLE','UNAVAILABLE')), type varchar(255) check (type in ('DEFAULT','PIZZA')), primary key (id));
create table merchant_logistic_settings (id uuid not null, km_radius numeric(10,2), min_tax numeric(10,2), tax_per_km numeric(10,2), primary key (id));
create table merchant_order_estimates (delivery_max_minutes integer not null, delivery_min_minutes integer not null, pickup_max_minutes integer not null, pickup_min_minutes integer not null, id uuid not null, primary key (id));
create table merchant_users (has_owner boolean not null, id uuid not null, merchant_id uuid, email varchar(255), name varchar(255), password varchar(255), phone varchar(255), role varchar(255) not null check (role in ('ADMIN','CHEF','GARSON','DRIVER')), primary key (id));
create table merchants (created_at timestamp(6) not null, last_opened_utc timestamp(6) with time zone not null, address_id uuid unique, document varchar(16), id uuid not null, corporate_name varchar(64), name varchar(64), description varchar(256), document_type varchar(255) check (document_type in ('CPF','CNPJ')), image_path varchar(255), merchant_type varchar(255) check (merchant_type in ('RESTAURANT','STORE','GROUP')), online_name varchar(255), phone varchar(255), primary key (id));
create table option_groups (i_food_option_group_id uuid, id uuid not null, merchant_id uuid, name varchar(255), option_group_type varchar(255) check (option_group_type in ('DEFAULT','SIZE','TOPPING','CRUST','EDGE')), status varchar(255) check (status in ('AVAILIABLE','UNAVAILABLE')), primary key (id));
create table options (index integer, i_food_option_id uuid, id uuid not null, option_group_id uuid, product_id uuid unique, status varchar(255) not null check (status in ('AVAILIABLE','UNAVAILABLE')), fractions integer[], primary key (id));
create table order_additional_fees (value numeric(10,2), id uuid not null, order_id uuid, type varchar(20), name varchar(128), description varchar(1024), primary key (id));
create table order_benefits (value numeric(10,2), id uuid not null, order_id uuid, description varchar(255), target varchar(255) check (target in ('ITEM','DELIVERY')), primary key (id));
create table order_commands (delivery_date_time date, id uuid not null, mode varchar(20) check (mode in ('DEFAULT','TABLE')), primary key (id));
create table order_customers (orders_count_on_merchant integer, id uuid not null, merchant_id uuid, document varchar(20), name varchar(20), phone varchar(20), segmentation varchar(20), primary key (id));
create table order_deliveries (delivery_date_time timestamp(6), address_id uuid unique, id uuid not null, delivery_by varchar(20) not null check (delivery_by in ('IFOOD','MERCHANT','ROTAFOOD')), description varchar(20), mode varchar(20) not null check (mode in ('DEFAULT','ECONOMIC','EXPRESS')), pickup_code varchar(256), primary key (id));
create table order_dive_ins (delivery_date_time date, id uuid not null, primary key (id));
create table order_item_options (quantity integer, total_price numeric(10,2), id uuid not null, option_id uuid, order_item_id uuid, catalog_context varchar(20) check (catalog_context in ('TABLE','DELIVERY','IFOOD')), primary key (id));
create table order_items (options_price numeric(10,2), quantity integer, total_price numeric(10,2), id uuid not null, item_id uuid, order_id uuid, catalog_context varchar(20) check (catalog_context in ('TABLE','DELIVERY','IFOOD')), primary key (id));
create table order_payment_methods (currency varchar(3) not null, prepaid boolean not null, value numeric(10,2) not null, type varchar(10) not null check (type in ('ONLINE','OFFLINE')), id uuid not null, order_payment_id uuid, method varchar(20) not null check (method in ('CREDIT','DEBIT','CASH','PIX')), description varchar(1024), primary key (id));
create table order_payments (pending numeric(10,2), prepaid numeric(10,2), id uuid not null, description varchar(1024), primary key (id));
create table order_schedules (delivery_date_time_end date, delivery_date_time_start date, id uuid not null, primary key (id));
create table order_takeouts (takeout_date_time date, id uuid not null, mode varchar(20) check (mode in ('DEFAULT','PICKUP_AREA')), comments varchar(255), primary key (id));
create table order_totals (additional_fees numeric(10,2), benefits numeric(10,2), delivery_fee numeric(10,2), order_amount numeric(10,2), sub_total numeric(10,2), id uuid not null, primary key (id));
create table orders (created_at timestamp(6) with time zone not null, merchant_sequence bigint not null, modified_at timestamp(6) with time zone not null, preparation_start_date_time timestamp(6) with time zone not null, command_id uuid, id uuid not null, merchant_id uuid, order_customer_id uuid unique, order_delivery_id uuid unique, order_dive_in_id uuid unique, order_payment_id uuid unique, order_schedule_id uuid unique, order_takeout_id uuid unique, order_total_id uuid unique, sales_channel varchar(20) check (sales_channel in ('CALL','WHATSAPP','ROTAFOOD','IFOOD')), status varchar(20) check (status in ('CREATED','CONFIRMED','PREPARATION_STARTED','READY_TO_PICKUP','DISPATCHED','COMPLETED','CANCELED')), timing varchar(20) check (timing in ('IMMEDIATE','SCHEDULED')), type varchar(20) check (type in ('DELIVERY','SCHEDULE','TAKEOUT','DINE_IN','COMMAND')), extra_info TEXT, primary key (id));
create table packagings (lenght_cm numeric(10,2) not null, thickness_cm numeric(10,2) not null, volume_ml numeric(10,2) not null, width_cm numeric(10,2) not null, id uuid not null, merchant_id uuid not null, name varchar(64) not null, image_path varchar(255), primary key (id));
create table payments (price numeric(10,2) not null, payment_date timestamp(6) not null, id uuid not null, subscription_id uuid, name varchar(100) not null, mercado_pago_payment_id varchar(256), transaction_id varchar(512), status varchar(255) check (status in ('PAID','PENDING','FAILED')), primary key (id));
create table plans (price numeric(38,2) not null, id uuid not null, name varchar(100) not null, description varchar(255) not null, primary key (id));
create table prices (original_value numeric(10,2) not null, value numeric(10,2) not null, id uuid not null, primary key (id));
create table product_option_group (index integer, max integer, min integer, id uuid not null, option_group_id uuid, product_id uuid, primary key (id));
create table product_packagings (quantity_per_package integer, id uuid not null, packaging_id uuid, product_id uuid, primary key (id));
create table products (quantity integer, id uuid not null, merchant_id uuid not null, name varchar(128) not null, ean varchar(256), additional_information varchar(512), description varchar(1024), image_path varchar(255), packaging_type varchar(255) check (packaging_type in ('PACKAGING','SIDE_BAG','NOT_APPLICABLE')), serving varchar(255) not null check (serving in ('NOT_APPLICABLE','SERVES_1','SERVES_2','SERVES_3','SERVES_4')), primary key (id));
create table scale_prices (min_quantity integer not null, value numeric(10,2) not null, id uuid not null, price_id uuid, primary key (id));
create table selling_options (average_unit numeric(38,2) not null, incremental numeric(38,2) not null, minimum numeric(38,2) not null, id uuid not null, product_id uuid, available_units text[] not null, primary key (id));
create table shifts (end_time time(6), friday boolean, monday boolean, saturday boolean, start_time time(6), sunday boolean, thursday boolean, tuesday boolean, wednesday boolean, id uuid not null, item_id uuid, merchant_id uuid, primary key (id));
create table subscriptions (end_date timestamp(6) not null, start_date timestamp(6) not null, id uuid not null, merchant_user_id uuid, plan_id uuid unique, status varchar(255) check (status in ('ACTIVE','CANCELED','EXPIRED')), primary key (id));
create table tables (number integer not null, pending numeric(10,2), prepaid numeric(10,2), id uuid not null, merchant_id uuid, primary key (id));
create table weights (quantity integer not null, id uuid not null, product_id uuid unique, unit varchar(255) check (unit in ('g','kg')), primary key (id));
alter table if exists catalog_categories add constraint FKne3shibxv8tfwthgufcul5xic foreign key (catalog_id) references catalogs;
alter table if exists catalog_categories add constraint FKm6aan0273i831bn8aba46cb1i foreign key (category_id) references categories;
alter table if exists catalogs add constraint FKkx2k3chn9jryg35csnqejy9h2 foreign key (merchant_id) references merchants;
alter table if exists categories add constraint FKp88pi8dlymagblpfl01nnoly9 foreign key (merchant_id) references merchants;
alter table if exists commands add constraint FKfuixuw9oqr0qjab6q4dy6hp3f foreign key (table_id) references tables;
alter table if exists context_modifiers add constraint FKamcatp9f3yjuc04dgr89w9maf foreign key (item_id) references items;
alter table if exists context_modifiers add constraint FKfmu9ao7cd0c1nf2ho8bb7llx1 foreign key (option_id) references options;
alter table if exists context_modifiers add constraint FK348stcg1mrm7puu8nitcg6ej4 foreign key (parent_option_id) references options;
alter table if exists context_modifiers add constraint FKqby6ip2wukh6b6qeciuf5udvc foreign key (price_id) references prices;
alter table if exists images add constraint FK9iot8c0njp5fku7gvkdiavups foreign key (merchant_id) references merchants;
alter table if exists items add constraint FKjcdcde7htb3tyjgouo4g9xbmr foreign key (category_id) references categories;
alter table if exists items add constraint FK4q5seic92w20pxqo49dc4s61o foreign key (merchant_id) references merchants;
alter table if exists items add constraint FKmtk37pxnx7d5ck7fkq2xcna4i foreign key (product_id) references products;
alter table if exists logistic_settings add constraint FK1ki3c4sist0r7swrvvqf5myul foreign key (merchant_id) references merchants;
alter table if exists merchant_users add constraint FKqhms11g17dld2i65gaqw1jjah foreign key (merchant_id) references merchants;
alter table if exists merchants add constraint FK63fsaqfa9t6fh74ww4xr8fpj1 foreign key (address_id) references addresses;
alter table if exists option_groups add constraint FKirun1bkvvvtfv5y5l46upqrhe foreign key (merchant_id) references merchants;
alter table if exists options add constraint FK3d2wqyaloehtbx2xpc0qbe91s foreign key (option_group_id) references option_groups;
alter table if exists options add constraint FK2m37jcoh1yt06dsivrphak718 foreign key (product_id) references products;
alter table if exists order_additional_fees add constraint FKkdtqiv10ctegpbat27kle4sty foreign key (order_id) references orders;
alter table if exists order_benefits add constraint FKhlfrgd0o8snx338g2fx9ryal1 foreign key (order_id) references orders;
alter table if exists order_customers add constraint FKbhs6gqyipadakapofaqpv9dqy foreign key (merchant_id) references merchants;
alter table if exists order_deliveries add constraint FKnh570pxxonjq73y5bsa3e4od8 foreign key (address_id) references addresses;
alter table if exists order_item_options add constraint FKb0i8d6fkc67ybqy3117w6m2e8 foreign key (option_id) references options;
alter table if exists order_item_options add constraint FKoxx4p9r1asmwop4wuynr6t0g6 foreign key (order_item_id) references order_items;
alter table if exists order_items add constraint FK88tn2oqcxl1034banqif9r70x foreign key (item_id) references items;
alter table if exists order_items add constraint FKbioxgbv59vetrxe0ejfubep1w foreign key (order_id) references orders;
alter table if exists order_payment_methods add constraint FKiqws4qentpwtk7k4s10tdt0o9 foreign key (order_payment_id) references order_payments;
alter table if exists orders add constraint FKt28bojmrjhqcvk1alb85p6gi7 foreign key (order_dive_in_id) references order_dive_ins;
alter table if exists orders add constraint FK7v4anv7q88xsgdoprtk7uev8l foreign key (command_id) references commands;
alter table if exists orders add constraint FKaa7q9kfnfcf4hwyh9uxr4x0f1 foreign key (order_customer_id) references order_customers;
alter table if exists orders add constraint FK12rcfikvft5iy4ydpakigcyf2 foreign key (order_delivery_id) references order_deliveries;
alter table if exists orders add constraint FKtqvpn5gy0ajx8fip3deoidfxd foreign key (merchant_id) references merchants;
alter table if exists orders add constraint FKkponi34ftt5x1itehm7rlhh5h foreign key (order_payment_id) references order_payments;
alter table if exists orders add constraint FKmnx4fbwnujj28157qyatbbput foreign key (order_schedule_id) references order_schedules;
alter table if exists orders add constraint FK8bi22bcfj3idmhyf5r1b1at73 foreign key (order_takeout_id) references order_takeouts;
alter table if exists orders add constraint FKo3taf4quniet7oic0rweiuqxi foreign key (order_total_id) references order_totals;
alter table if exists packagings add constraint FK9pflxabp2k40s1n66ov294ndh foreign key (merchant_id) references merchants;
alter table if exists payments add constraint FKa3xnf2o6mt8cqbewvq2ouq3rq foreign key (subscription_id) references subscriptions;
alter table if exists product_option_group add constraint FKaeh0ld6gggusg2pfq5o3hd056 foreign key (option_group_id) references option_groups;
alter table if exists product_option_group add constraint FKq3ymvu7uw91ddr7gyds8dhrr4 foreign key (product_id) references products;
alter table if exists product_packagings add constraint FKsmryvekk23d990a2frkvw0w3k foreign key (packaging_id) references packagings;
alter table if exists product_packagings add constraint FK4g7qg98oyqh3a5tna21q34o0s foreign key (product_id) references products;
alter table if exists products add constraint FKt1yvv81v320ba41fq28k7had2 foreign key (merchant_id) references merchants;
alter table if exists scale_prices add constraint FK41c2icku1gau5d08hoeta3m75 foreign key (price_id) references prices;
alter table if exists selling_options add constraint FKpngv5jnjwj1a3i8tndh32xn06 foreign key (product_id) references products;
alter table if exists shifts add constraint FKj37msba48037erxhxp0xyh7qr foreign key (item_id) references items;
alter table if exists shifts add constraint FK6bx4ph95hwbebowtse3o5ldu7 foreign key (merchant_id) references merchants;
alter table if exists subscriptions add constraint FKb1uf5qnxi6uj95se8ykydntl1 foreign key (plan_id) references plans;
alter table if exists subscriptions add constraint FKct7p82efq7u73jdxticea5csi foreign key (merchant_user_id) references merchant_users;
alter table if exists tables add constraint FK93h113fq66u9y9drxd0f2nu66 foreign key (merchant_id) references merchants;
alter table if exists weights add constraint FKimwah0owad2wrhqwd78iwbgnh foreign key (product_id) references products;
alter table if exists merchants add column merchant_logistic_setting_id uuid;
alter table if exists merchants add column merchant_order_estimate_id uuid;
alter table if exists merchants add constraint UK_367apebrxak3qtrxwu9kt2f6f unique (merchant_logistic_setting_id);
alter table if exists merchants add constraint UK_ja9g0ef1si44olo2mlqpc3liq unique (merchant_order_estimate_id);
alter table if exists merchants add constraint FKgo85miohukd4wy5nde7o6f3uo foreign key (merchant_logistic_setting_id) references merchant_logistic_settings;
alter table if exists merchants add constraint FK6dbkf4llbokml5c8o9vhfrbus foreign key (merchant_order_estimate_id) references merchant_order_estimates;
alter table if exists merchants add column owner_user_id uuid;
alter table if exists merchants drop constraint if exists UK_po72oqo2f5jskl7omcg1l6k0d;
alter table if exists merchants add constraint UK_po72oqo2f5jskl7omcg1l6k0d unique (owner_user_id);
alter table if exists merchants add constraint FK1qbe15kx1xcqr92w2vo39cdmq foreign key (owner_user_id) references merchant_users;




alter table if exists commands add column merchant_sequence integer not null;
alter table if exists commands add column name varchar(255);
alter table if exists commands add column table_index integer;
alter table if exists commands add column merchant_id uuid;
alter table if exists commands add constraint FK8tam8en5va1n7655bvgmc2sv5 foreign key (merchant_id) references merchants;
